{% extends 'index.html.twig' %}

{% block title %}Home{% endblock %}

{# Css/Js Loading #}
{% set coreCss = 1%}
{% set heroCss = 1%}
{% set modalCss = 1%}
{% set bootstrapCss = 1%}
{% set bootstrapJs = 1%}

{% block card %}
<style>
.timer-overlay {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: 'Orbitron', sans-serif;
    font-size: 16px;
    font-weight: bold;
    color: #ffffff;
    text-shadow: 0 0 5px rgba(0, 255, 255, 0.8), 0 0 10px rgba(0, 255, 255, 0.6);
    background: rgba(0, 0, 0, 0.4);
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.5), inset 0 0 10px rgba(0, 255, 255, 0.2);
    animation: pulse-glow 1.5s infinite alternate;
    transition: all 0.3s ease-in-out;
}

@keyframes pulse-glow {
    0% {
        text-shadow: 0 0 5px rgba(0, 255, 255, 0.8), 0 0 10px rgba(0, 255, 255, 0.6);
        box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
    }
    100% {
        text-shadow: 0 0 10px rgba(0, 255, 255, 1), 0 0 20px rgba(0, 255, 255, 0.8);
        box-shadow: 0 0 20px rgba(0, 255, 255, 0.8);
    }
}

.timer-overlay:hover {
    transform: scale(1.1);
    background: rgba(0, 0, 0, 0.6);
}
</style>

<div class="main-panel">
    <!-- Image Map Generated by http://www.image-map.net/ -->
    <div class="map-container" style="position: relative;">
        <img class="image-map" src="{{ asset('images/maps/home.webp') }}" usemap="#image-map" id="map-image">
        <svg id="svg-overlay" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none;"></svg>
        <map name="image-map">


            {% set buildingsInfo = [
                {'id': 1, 'left': '57.65%', 'top': '27.2%'},
                {'id': 2, 'left': '43%', 'top': '72%'},
                {'id': 3, 'left': '41%', 'top': '14.5%'},
                {'id': 4, 'left': '41.2%', 'top': '38.5%'},
                {'id': 5, 'left': '39.2%', 'top': '0%'},
                {'id': 6, 'left': '57.7%', 'top': '6%'},
                {'id': 7, 'left': '71.3%', 'top': '5.9%'},
                {'id': 8, 'left': '89.3%', 'top': '9%'}
            ] %}

            {% for buildingInfo in buildingsInfo %}
                {% set allSufficient = true %} {# Variable de contrôle pour ce bâtiment #}
                {% set buildingLevel = app.user.selectedEmpire.buildingLevels | filter(b => b.building.id == buildingInfo.id) | first %}
                {% set building = buildingLevel.building %}
                {% for resource, cost in building.upgradeCost %}
                    {% set resourceEmpires = app.user.selectedEmpire.resources %}
                    {% set updatedCost = (cost * (1.3 ** buildingLevel.level)) | round(0, 'ceil') %}
                    {% set resourceName = resource - 1 %}
                    {% set availableAmount = resourceEmpires[resourceName].quantity %}

                    {% if availableAmount < updatedCost %}
                        {% set allSufficient = false %}
                    {% endif %}
                {% endfor %}

                {# Affichage de l'image si les ressources sont suffisantes #}
                {% if allSufficient and buildingLevel.upgradeEndTime is empty %}
                    <a 
                        href="#" 
                        data-bs-toggle="modal" 
                        data-bs-target="#modalBuilding-{{ building.id }}">
                        <img 
                            width="50" 
                            height="50" 
                            style="position: absolute; left: {{ buildingInfo.left }}; top: {{ buildingInfo.top }}; border-radius: 50%;" 
                            src="{{ asset('images/core/upgrade.webp') }}"
                        >
                    </a>
                {% elseif buildingLevel.upgradeEndTime %}
                    <a 
                        href="#" 
                        data-bs-toggle="modal" 
                        data-bs-target="#modalBuilding-{{ building.id }}">
                        <img 
                            width="50" 
                            height="50" 
                            style="position: absolute; left: {{ buildingInfo.left }}; top: {{ buildingInfo.top }}; border-radius: 50%;" 
                            src="{{ asset('images/core/upgrade.gif') }}"
                            value="
                                {% set time = buildingTimes[building.id] %}
                                {% if time.days > 0 %}{{ time.days }} jour(s) {% endif %}
                                {% if time.hours > 0 %}{{ time.hours }} heure(s) {% endif %}
                                {% if time.minutes > 0 %}{{ time.minutes }} minute(s) {% endif %}
                                {{ time.seconds }} seconde(s)."
                        >
                    </a>
                    {% set leftWithMargin = (buildingInfo.left|replace({'%': ''})) - 5 %}
                    {% set topWithMargin = (buildingInfo.top|replace({'%': ''})) + 7 %}
                    <div 
                        class="timer-overlay"
                        id="countdown-{{ building.id }}" 
                        data-upgrade-end-time="{{ buildingLevel.upgradeEndTime.timestamp }}" 
                        style="
                            left: {{ leftWithMargin }}%; 
                            top: {{ topWithMargin }}%;"
                    >
                        {% set time = buildingTimes[building.id] %}
                        {% if time.days > 0 %}{{ time.days }} jour(s) {% endif %}
                        {% if time.hours > 0 %}{{ time.hours }} heure(s) {% endif %}
                        {% if time.minutes > 0 %}{{ time.minutes }} minute(s) {% endif %}
                        {{ time.seconds }} seconde(s).
                    </div>
                {% endif %}
                    {# Modal HTML pour le bâtiment #}
                    <div class="modal fade" id="modalBuilding-{{ building.id }}" tabindex="-1" aria-labelledby="modalLabel-{{ building.id }}" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="modalLabel-{{ building.id }}">Amélioration du bâtiment {{ building.name }}</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p>Voici les détails pour l'amélioration du bâtiment.</p>
                                    
                                    <p>Niveau actuel : {{ buildingLevel.level }}</p>

                                    {% if building.id >= 5 and building.id <= 8 %}
                                        <p>Type de ressource produite : {{ building.name }}</p>
                                        {% set production = buildingLevel.level * building.resourcePerLevel * building.productionRate %}
                                        <p>Production actuel : {{ production }} / minute</p>
                                    {% endif %}

                                    <p>Coût de mise à niveau :</p>
                                    <ul>
                                        {% for resource, cost in building.upgradeCost %}
                                            {% set buildingLevel = app.user.selectedEmpire.buildingLevels | filter(b => b.building.id == building.id) | first %}
                                            {% set resourceEmpires = app.user.selectedEmpire.resources %}
                                            {% set updatedCost = (cost * (1.3 ** buildingLevel.level)) | round(0, 'ceil') %}
                                            {% set resourceName = resource - 1 %}
                                            {% set availableAmount = resourceEmpires[resourceName].quantity %}
                                            <li>{{ resourceEmpires[resourceName].name }} : {{ updatedCost }}</li>
                                        {% endfor %}
                                    </ul>

                                    <p>Temps de mise à niveau :</p>
                                    <ul class="data-night-blue">
                                        <li>
                                            {% set time = buildingTimes[building.id] %}
                                            {% if time.days > 0 %}{{ time.days }} jour(s) {% endif %}
                                            {% if time.hours > 0 %}{{ time.hours }} heure(s) {% endif %}
                                            {% if time.minutes > 0 %}{{ time.minutes }} minute(s) {% endif %}
                                            {{ time.seconds }} seconde(s).
                                        </li>
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    {% if buildingLevel.upgradeStartTime %}
                                    <p>Temps de mise à niveau :</p>
                                    <ul>
                                        <li>
                                            <span id="countdown-{{ building.id }}" data-upgrade-end-time="{{ buildingLevel.upgradeEndTime.timestamp }}">Le compte à rebours doit commencer ici!</span>
                                        </li>
                                    </ul>
                                    <script src="{{ asset('js/countdown.js') }}"></script>
                                    {% else %}
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                                        <form id="upgrade-form-{{ building.id }}" action="{{ path('app_building_upgrade', {'id': building.id}) }}" method="post">
                                            <input type="hidden" name="_token" value="{{ csrf_token('upgrade' ~ building.id) }}">
                                            <button type="submit" class="btn btn-mystic">Mettre à Niveau</button>
                                        </form>
                                    {% endif %}
                                    <div class="error-message alert alert-danger d-none"></div>
                                </div>
                            </div>
                        </div>
                    </div>
            {% endfor %}

            {% set buildingsMap = [
                {'id': 1, 'category': 'electromagnetic', 'path': 'app_unit', 'params': {'category': 'electromagnetic'}},
                {'id': 2, 'category': 'gravity', 'path': 'app_unit', 'params': {'category': 'gravity'}},
                {'id': 3, 'category': 'strong', 'path': 'app_unit', 'params': {'category': 'strong'}},
                {'id': 4, 'category': 'weak', 'path': 'app_unit', 'params': {'category': 'weak'}},
                {'id': 5, 'modal': true},
                {'id': 6, 'modal': true},
                {'id': 7, 'modal': true},
                {'id': 8, 'modal': true},
                {'id': 9, 'category': 'universe_3d', 'path': 'app_universe_3d'},
                {'id': 10, 'category': 'radar', 'path': 'app_radar'},
                {'id': 11, 'category': 'map', 'path': 'app_map', 'params': {'dimension': app.user.selectedEmpire.dimension}},
                {'id': 12, 'category': 'research', 'path': 'app_research'},
                {'id': 13, 'category': 'games', 'path': 'app_games'},
                {'id': 14, 'category': 'universe', 'path': 'app_universe'},
            ] %}

            {% for building in buildingsMap %}
                {% set buildingData = buildings[building.id - 1] %}

                {% if building.modal is defined %}
                    <area target="" 
                        alt="{{ buildingData.name }}" 
                        title="{{ buildingData.name }}" 
                        data-bs-toggle="modal" 
                        data-bs-target="#modalBuilding-{{ building.id }}" 
                        coords="{{ buildingData.coords }}" 
                        shape="poly" 
                        data-original-coords="{{ buildingData.coords }}">
                {% else %}
                    <area target="" 
                        href="{{ path(building.path, building.params|default({})) }}" 
                        alt="{{ buildingData.name }}" 
                        title="{{ buildingData.name }}" 
                        coords="{{ buildingData.coords }}" 
                        shape="poly" 
                        data-original-coords="{{ buildingData.coords }}">
                {% endif %}
            {% endfor %}
        </map>
    </div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Sélectionnez tous les formulaires ayant un ID commençant par "upgrade-form-"
        document.querySelectorAll('form[id^="upgrade-form-"]').forEach(function (form) {
            form.addEventListener('submit', function (e) {
                e.preventDefault(); // Empêche le rechargement de la page

                const formData = new FormData(form); // Récupère les données du formulaire
                const url = form.action; // Récupère l'URL du formulaire

                fetch(url, {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.json()) // Traite la réponse en JSON
                    .then(data => {
                        const modal = form.closest('.modal'); // Récupère le modal parent du formulaire
                        const errorDiv = modal.querySelector('.error-message'); // Cible la division pour l'erreur

                        if (data.success) {
                            // Si succès, affiche un message et recharge la page
                            location.reload();
                        } else {
                            // Si échec, affiche le message d'erreur
                            errorDiv.textContent = data.error;
                            errorDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la requête :', error);
                    });
            });
        });
    });
</script>

<script src="{{ asset('js/selectMap.js') }}"></script>
<script src="{{ asset('js/resizeMap.js') }}"></script>
{% endblock %}
